version: '2.1'

commands:
  setup_env:
    steps:
      - checkout
      - run:
          name: Initialize submodules
          command: git submodule sync --recursive; git submodule update --recursive --init
      - run: sudo npm install -g npm
      - run:
          name: Build federation-demo
          working_directory: dockerfiles/federation-demo/federation-demo
          command: npm install;
      - run:
          name: Start federation-demo services
          working_directory: dockerfiles/federation-demo/federation-demo
          command: npm run start
          background: true
      - run:
          name: Wait for accounts
          command: timeout 22 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' localhost 4001
      - run:
          name: Wait for reviews
          command: timeout 22 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' localhost 4002
      - run:
          name: Wait for products
          command: timeout 22 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' localhost 4003
      - run:
          name: Wait for inventory
          command: timeout 22 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' localhost 4004
      - run:
          name: Wait for gateway
          command: timeout 22 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' localhost 4000
      - run: sudo apt-get update
      - run: sudo apt-get install libssl-dev
      - run: cargo --version

  build:
    parameters:
      cache_version:
        default: v1
        description: Cache version to use - increment this to build a fresh cache.
        type: string
    steps:
      - restore_cache:
          keys:
            - 'cargo-<<parameters.cache_version>>-{{ checksum "Cargo.lock" }}'
      - run:
          name: Tests
          command: cargo test --all
      - run:
          name: Format lint
          command: cargo fmt -- --check
      - run:
          name: Clippy lint
          command: cargo clippy --all --no-default-features -- -D warnings
      - run:
          name: Strict build
          command: cargo build --all-targets
          environment:
            RUSTFLAGS: -D warnings -D missing_docs -D future_incompatible -D missing_debug_implementations -D nonstandard_style -D future_incompatible -D unreachable_pub -D rust_2018_idioms
      - run: cargo rustdoc
      - save_cache:
          key: 'cargo-<<parameters.cache_version>>-{{ checksum "Cargo.lock" }}'
          paths:
            - ~/.cargo

jobs:
  build_test_lint:
    docker:
      - image: cimg/rust:1.53.0-node
    steps:
      - setup_env
      - build

workflows:
  build:
    jobs:
      - build_test_lint


